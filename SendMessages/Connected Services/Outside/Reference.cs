//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SendMessages.Outside {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseRequest", Namespace="http://schemas.datacontract.org/2004/07/Rabbit.Core")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SendMessages.Outside.LocationRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SendMessages.Outside.AlertRequest))]
    public partial class BaseRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationRequest", Namespace="http://schemas.datacontract.org/2004/07/Rabbit.Core")]
    [System.SerializableAttribute()]
    public partial class LocationRequest : SendMessages.Outside.BaseRequest {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LongitudeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlertRequest", Namespace="http://schemas.datacontract.org/2004/07/Rabbit.Core")]
    [System.SerializableAttribute()]
    public partial class AlertRequest : SendMessages.Outside.BaseRequest {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ArrivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Arrived {
            get {
                return this.ArrivedField;
            }
            set {
                if ((this.ArrivedField.Equals(value) != true)) {
                    this.ArrivedField = value;
                    this.RaisePropertyChanged("Arrived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlertResponse", Namespace="http://schemas.datacontract.org/2004/07/Rabbit.Core")]
    [System.SerializableAttribute()]
    public partial class AlertResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationResponse", Namespace="http://schemas.datacontract.org/2004/07/Rabbit.Core")]
    [System.SerializableAttribute()]
    public partial class LocationResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://paulfarry/gatewayservice", ConfigurationName="Outside.GatewayService")]
    public interface GatewayService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://paulfarry/gatewayservice/GatewayService/Alert", ReplyAction="http://paulfarry/gatewayservice/GatewayService/AlertResponse")]
        SendMessages.Outside.AlertResponse Alert(SendMessages.Outside.AlertRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://paulfarry/gatewayservice/GatewayService/Alert", ReplyAction="http://paulfarry/gatewayservice/GatewayService/AlertResponse")]
        System.Threading.Tasks.Task<SendMessages.Outside.AlertResponse> AlertAsync(SendMessages.Outside.AlertRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://paulfarry/gatewayservice/GatewayService/LocationUpdate", ReplyAction="http://paulfarry/gatewayservice/GatewayService/LocationUpdateResponse")]
        SendMessages.Outside.LocationResponse LocationUpdate(SendMessages.Outside.LocationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://paulfarry/gatewayservice/GatewayService/LocationUpdate", ReplyAction="http://paulfarry/gatewayservice/GatewayService/LocationUpdateResponse")]
        System.Threading.Tasks.Task<SendMessages.Outside.LocationResponse> LocationUpdateAsync(SendMessages.Outside.LocationRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface GatewayServiceChannel : SendMessages.Outside.GatewayService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GatewayServiceClient : System.ServiceModel.ClientBase<SendMessages.Outside.GatewayService>, SendMessages.Outside.GatewayService {
        
        public GatewayServiceClient() {
        }
        
        public GatewayServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GatewayServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GatewayServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GatewayServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SendMessages.Outside.AlertResponse Alert(SendMessages.Outside.AlertRequest request) {
            return base.Channel.Alert(request);
        }
        
        public System.Threading.Tasks.Task<SendMessages.Outside.AlertResponse> AlertAsync(SendMessages.Outside.AlertRequest request) {
            return base.Channel.AlertAsync(request);
        }
        
        public SendMessages.Outside.LocationResponse LocationUpdate(SendMessages.Outside.LocationRequest request) {
            return base.Channel.LocationUpdate(request);
        }
        
        public System.Threading.Tasks.Task<SendMessages.Outside.LocationResponse> LocationUpdateAsync(SendMessages.Outside.LocationRequest request) {
            return base.Channel.LocationUpdateAsync(request);
        }
    }
}
